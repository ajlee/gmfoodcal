<?php

/**
 * Implements hook_form_FORM_ID_alter().
 */
function gmfood_forms_form_user_register_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state) {
  // TODO: multiple pages - see https://www.philfrilling.com/blog/2018-09/drupal-8-change-user-registration-form-multi-step-form

  $form['field_about_me']['#access'] = FALSE;
  $form['field_contact_email']['#access'] = FALSE;
  $form['field_phone']['#access'] = FALSE;
  $form['field_hidden_account']['#access'] = FALSE;
  $form['field_link_to_organisation']['#access'] = FALSE;
  $form['field_organisation_name']['#access'] = FALSE;
  $form['field_public_name']['#access'] = FALSE;
  $form['user_picture']['#access'] = FALSE;
}

function gmfood_forms_form_node_event_date_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state) {

  // block access to /node/add/event_date
  $current_path = \Drupal::service('path.current')->getPath();
  $disable_url = '/node/add/event_date';
  if ($current_path == $disable_url){
    $form['description'] = [
                '#type' => 'item',
                '#markup' => t('<strong>This form is disabled. Please use the Add Event form instead.</strong>'),
                '#weight' => -20,
              ];
    $form['#attributes']['disabled'] = 'disabled';
    $form['title']['#attributes']['disabled'] = 'disabled';
    $form['title']['#access'] = FALSE;
    $form['field_inline_event_date']['#access'] = FALSE;
    $form['field_inline_event_date']['#attributes']['disabled'] = 'disabled';
    $form['actions']['submit']['#attributes']['disabled']  = 'disabled';
    $form['actions']['preview']['#attributes']['disabled']  = 'disabled';
  }
}
  /**
   * Implementing hook_mail()
   */
  function gmfood_forms_mail($key, &$message, $params) {

  $form = $params['form'];

  // alter email text for newsletter manager / moderator access form
  if ($form == 'request_newsletter_manager_access_form') {
    $message['subject'] = "GM Calendar Newsletter Manager Request from " . $params['user'];
    $body =
    "Someone has requested to be a newsletter manager. The details of this request are below:

    Username:  " . $params['user'] . "
    Email: " . $params['email'] . "
    Public Name: " . $params['public_name'] . "
    Public Email: " . $params['public_email'] . "
    Phone: " . $params['phone'] . "
    About Me: " . $params['about_me'] . "


    Details of the Request: " . $params['details'] . "


    You can approve this request by going to " . $params['url'] . " and selecting the role - newsletter manager option.

    ---


    Sent by
    The Drupal Fairy,
    The GM Food Forum Calendar";

  }
  // default is to send the newsletter moderator form
  else {
  $message['subject'] = "GM Calendar Moderator Request From " . $params['user'];
  // E-mail formatting will be exactly as below, so do not use indenting!
  $body =
"Someone has requested to be a moderator. The details of this request are below:

Username:  " . $params['user'] . "
Email: " . $params['email'] . "
Public Name: " . $params['public_name'] . "
Public Email: " . $params['public_email'] . "
Phone: " . $params['phone'] . "
About Me: " . $params['about_me'] . "


Details of the Request: " . $params['details'] . "


You can approve this request by going to " . $params['url'] . " and selecting the role - moderator option.


Once you have given them moderator access, you need to edit the calendar pages to add them as a moderator.
The calendars requested are:

" . $params['calendars'] . "


---


Sent by
The Drupal Fairy,
The GM Food Forum Calendar";

}

  $unsubscribe_text = '';
  $footer = $unsubscribe_text;

  $message['body'][] = Drupal\Core\Mail\MailFormatHelper::htmlToText($body);
  $message['body'][] = Drupal\Core\Mail\MailFormatHelper::htmlToText($footer);
  kint($message);
}
