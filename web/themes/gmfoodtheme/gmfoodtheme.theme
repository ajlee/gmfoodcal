<?php
use Drupal\node\Entity\Node;
use Drupal\Core\Url;
use Drupal\Core\Link;

/**
 * @file
 * Theme functions
 */
// Include all files from the includes directory.
$includes_path = dirname(__FILE__) . '/includes/*.inc';
foreach (glob($includes_path) as $filename) {
  require_once dirname(__FILE__) . '/includes/' . basename($filename);
}

/*
 * extends theme_preprocess_node()
 */
function gmfoodtheme_preprocess_node(&$variables) {
  $referenced_entity_type = 'node';
  //kint($variables['node']);
  //kint($variables['node']->id());

  $node = $variables['node'];
  $type = $variables['node']->getType();
  $nid = $variables['node']->id();
  $view_mode = $variables['view_mode'];
  $variables['view_mode'] = $view_mode;

  if ($type == 'event') {
    $variables['edit_link'] = get_node_edit_link($nid);
  }


  //
  // Custom code for preprocessing event_dates
  //
  else if ($type == 'event_date'){

    // get the date in plain format
    $variables['date_time_plain'] = $node->get('field_inline_event_date')->getValue()[0]['value'];
    // kint('aaa');

    /*
     * Use reverse entity reference to find events referencing 'event_date' nodes
     * The 'event' node will be rendered on the twig template instead of the 'event_date' node
     */

    $moduleHandler = \Drupal::service('module_handler');
    if ($moduleHandler->moduleExists('reverse_entity_reference')){
      //kint('xxx');
      $referencing_entities = \Drupal::service('entity_type.manager')
        ->getStorage($referenced_entity_type)
        ->load($variables['node']->id())
        ->get('reverse_entity_reference')
        ->getValue();
      $variables['reverse_entity_reference'] = $referencing_entities;
      //kint($referencing_entities);

      // loop over all referencing entities
      // we are only interested in the event nodes though
      foreach($referencing_entities as $entity_ref) {
        //kint('yyy');

        if ($entity_ref['field_name'] == 'field_event_dates') {
          $event_node = Node::Load($entity_ref['target_id']);
          //kint($event_node->getType());

          if($event_node->getType() == 'event') {

            // use the same view mode as current node if its email plain or newsletter standard
            // otherwise use default
            $event_view_mode = 'full';
            if($view_mode == "email_plain" || $view_mode == "event_date_newsletter_standard_view") {
              $event_view_mode = $view_mode;
            }
            // build the node and pass it to the twig template
            $view_builder = \Drupal::entityTypeManager()->getViewBuilder('node');
            $build = $view_builder->view($event_node, $event_view_mode);
            $html = \Drupal::service('renderer')->renderPlain($build);
            $variables['event_node'] = $html;
            $variables['event_node_title'] = $event_node->getTitle();
            $variables['event_node_edit_link'] = get_node_edit_link($event_node->id());
            //kint($html);
            //kint('zzz');
            break; // will take the first event node reference found
          }
        }
      }
    }
  }

  // Preprocessing newsletters
  else if ($type == "simplenews_issue") {
    if ($view_mode == 'full') {
      $view_builder = \Drupal::entityTypeManager()->getViewBuilder('node');
      $build = $view_builder->view($node, 'email_plain');
      $html = \Drupal::service('renderer')->renderPlain($build);
      $variables['plain_text_newsletter'] = $html;
    }
  }
}


/*
 * extends theme_preprocess_node()
 */
function gmfoodtheme_preprocess_menu(&$variables) {
  //kint($variables);
}

/*
 * Create an edit link from a node id
 */
function get_node_edit_link($nid) {
  /* create event edit link */
  $url = Url::fromRoute('entity.node.edit_form', ['node' => $nid]);
  $link = Link::fromTextAndUrl('edit', $url);
  $build = [
    'link' => $link->toRenderable(),
  ];
  return $build;
}


/*
 * uses hook_fullcalendar_classes
 */
function gmfood_theme_fullcalendar_classes($entity) {
  kint('1');
  // Add the entity type as a class.
  return [
    $entity->entity_type,
  ];
}

function  gmfood_theme_preprocess_views_view_fields(&$variables) {
  kint('yyy');
}

function gmfood_theme_preprocess_fullcalendar_event(&$variables) {
  kint('aaaaaa');
}
